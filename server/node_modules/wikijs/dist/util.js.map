{"version":3,"sources":["../src/util.js"],"names":["api","pagination","aggregatePagination","fetchOptions","method","headers","Object","assign","params","format","action","redirects","apiOptions","origin","qs","apiUrl","stringify","url","then","res","json","error","Error","info","results","parseResults","query","srsearch","keys","filter","continueType","continueKey","resolution","next","previousResults"],"mappings":"4EAUgBA,G,CAAAA,G,SAoBAC,U,CAAAA,U,SAkBAC,mB,CAAAA,mB,CAhDhB,mM,iNAGA,GAAMC,cAAe,CACpBC,OAAQ,KADY,CAEpBC,+FAFoB,CAArB,CAOO,QAASL,IAAT,GAAsC,iEACtC,EAAKM,OAAOC,MAAP,IAAkBC,CAAlB,CAA0B,CACpCC,OAAQ,MAD4B,CAEpCC,OAAQ,OAF4B,CAGpCC,UAAW,EAHyB,CAA1B,CADiC,CAMxCC,EAAWC,MAN6B,GAO3CC,EAAGD,MAAH,CAAYD,EAAWC,MAPoB,EAS5C,GAAM,GAASD,EAAWG,MAApB,KAA8B,sBAAYC,SAAZ,CAAsBF,CAAtB,CAApC,CACA,MAAO,8BAAMG,CAAN,CAAWd,YAAX,EACLe,IADK,CACA,kBAAOC,GAAIC,IAAJ,EAAP,CADA,EAELF,IAFK,CAEA,WAAO,CACZ,GAAIC,EAAIE,KAAR,CACC,KAAM,IAAIC,MAAJ,CAAUH,EAAIE,KAAJ,CAAUE,IAApB,CAAN,CAED,MAAOJ,EACP,CAPK,CAQP,CAEM,QAASlB,WAAT,OAAsD,CAC5D,MAAOD,KAAIY,CAAJ,CAAgBJ,CAAhB,EACLU,IADK,CACA,WAAO,CACZ,GAAI,GAAa,CACNM,OADM,CACIC,EAAaN,CAAb,CADJ,CAENO,KAFM,CAEElB,EAAOmB,QAFT,CAAjB,CAGA,GAAIR,EAAI,UAAJ,CAAJ,CAAqB,CACpB,GAAM,GAAeb,OACnBsB,IADmB,CACdT,EAAI,UAAJ,CADc,EAEnBU,MAFmB,CAEZ,kBAAe,UAAR,IAAP,CAFY,EAEe,CAFf,CAArB,CAGM,EAAcV,EAAI,UAAJ,EAAgBW,CAAhB,CAHpB,CAIAtB,EAAOsB,CAAP,EAAuBC,CALH,CAMpBC,EAAWC,IAAX,CAAkB,iBAAMhC,YAAWW,CAAX,CAAuBJ,CAAvB,CAA+BiB,CAA/B,CAAN,CAClB,CACD,MAAOO,EACP,CAdK,CAeP,CAEM,QAAS9B,oBAAT,GAA+D,iEACrE,MAAOD,GACLiB,IADK,CACA,WAAO,CACZ,GAAM,gCAAcgB,CAAd,qBAAkCf,EAAIK,OAAtC,EAAN,CADY,MAERL,GAAIc,IAFI,CAGJ/B,oBAAoBiB,EAAIc,IAAJ,EAApB,CAAgCT,CAAhC,CAHI,CAKJA,CAER,CARK,CASP","file":"util.js","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport querystring from 'querystring';\n\nconst fetchOptions = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'User-Agent': 'WikiJs/0.1 (https://github.com/dijs/wiki; richard.vanderdys@gmail.com)'\n\t}\n};\n\nexport function api(apiOptions, params = {}) {\n\tconst qs = Object.assign({}, params, {\n\t\tformat: 'json',\n\t\taction: 'query',\n\t\tredirects: ''\n\t});\n\tif (apiOptions.origin) {\n\t\tqs.origin = apiOptions.origin;\n\t}\n\tconst url = `${apiOptions.apiUrl}?${querystring.stringify(qs)}`;\n\treturn fetch(url, fetchOptions)\n\t\t.then(res => res.json())\n\t\t.then(res => {\n\t\t\tif (res.error) {\n\t\t\t\tthrow new Error(res.error.info);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n}\n\nexport function pagination(apiOptions, params, parseResults) {\n\treturn api(apiOptions, params)\n\t\t.then(res => {\n\t\t\tlet resolution = {};\n\t\t\tresolution.results = parseResults(res);\n\t\t\tresolution.query = params.srsearch;\n\t\t\tif (res['continue']) {\n\t\t\t\tconst continueType = Object\n\t\t\t\t\t.keys(res['continue'])\n\t\t\t\t\t.filter(key => key !== 'continue')[0];\n\t\t\t\tconst continueKey = res['continue'][continueType];\n\t\t\t\tparams[continueType] = continueKey;\n\t\t\t\tresolution.next = () => pagination(apiOptions, params, parseResults);\n\t\t\t}\n\t\t\treturn resolution;\n\t\t});\n}\n\nexport function aggregatePagination(pagination, previousResults = []) {\n\treturn pagination\n\t\t.then(res => {\n\t\t\tconst results = [...previousResults, ...res.results];\n\t\t\tif (res.next) {\n\t\t\t\treturn aggregatePagination(res.next(), results);\n\t\t\t} else {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t});\n}\n"]}